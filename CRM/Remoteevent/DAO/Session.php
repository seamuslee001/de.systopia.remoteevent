<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from de.systopia.remoteevent/xml/schema/CRM/Remoteevent/Session.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:d942d3908a87411f73d6a3dca0f61768)
 */

/**
 * Database access object for the Session entity.
 */
class CRM_Remoteevent_DAO_Session extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_session';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Session ID
   *
   * @var int
   */
  public $id;

  /**
   * FK to Event
   *
   * @var int
   */
  public $event_id;

  /**
   * Is this Session enabled or disabled/cancelled?
   *
   * @var bool
   */
  public $is_active;

  /**
   * Date and time that sessions starts.
   *
   * @var datetime
   */
  public $start_date;

  /**
   * Date and time that session ends. May be NULL if no defined end date/time
   *
   * @var datetime
   */
  public $end_date;

  /**
   * @var int
   */
  public $slot_id;

  /**
   * @var int
   */
  public $category_id;

  /**
   * @var int
   */
  public $type_id;

  /**
   * Session Title
   *
   * @var string
   */
  public $title;

  /**
   * Full description of the session. Text and html allowed. Displayed on built-in Event Information screens.
   *
   * @var text
   */
  public $description;

  /**
   * Maximum number of registered participants to allow.
   *
   * @var int
   */
  public $max_participants;

  /**
   * Location information for this session
   *
   * @var text
   */
  public $location;

  /**
   * FK to Contact ID
   *
   * @var int
   */
  public $presenter_id;

  /**
   * Presenter Title
   *
   * @var string
   */
  public $presenter_title;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_session';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   */
  public static function getEntityTitle() {
    return ts('Sessions');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'event_id', 'civicrm_event', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Unique Session ID'),
          'required' => TRUE,
          'where' => 'civicrm_session.id',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'add' => NULL,
        ],
        'event_id' => [
          'name' => 'event_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Remoteevent_ExtensionUtil::ts('FK to Event'),
          'where' => 'civicrm_session.event_id',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'FKClassName' => 'CRM_Event_DAO_Event',
          'add' => NULL,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Is Active'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Is this Session enabled or disabled/cancelled?'),
          'where' => 'civicrm_session.is_active',
          'default' => '0',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'session_start_date' => [
          'name' => 'start_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Session Start Date'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Date and time that sessions starts.'),
          'import' => TRUE,
          'where' => 'civicrm_session.start_date',
          'export' => TRUE,
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
        'session_end_date' => [
          'name' => 'end_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Session End Date'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Date and time that session ends. May be NULL if no defined end date/time'),
          'import' => TRUE,
          'where' => 'civicrm_session.end_date',
          'headerPattern' => '/^end|(e(nd\s)?date)$/i',
          'export' => TRUE,
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
        'session_slot_id' => [
          'name' => 'slot_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Session Slot'),
          'where' => 'civicrm_session.slot_id',
          'default' => '0',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'session_slot',
            'optionEditPath' => 'civicrm/admin/options/session_slot',
          ],
          'add' => NULL,
        ],
        'session_category_id' => [
          'name' => 'category_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Session Category'),
          'where' => 'civicrm_session.category_id',
          'default' => '0',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'session_category',
            'optionEditPath' => 'civicrm/admin/options/session_category',
          ],
          'add' => NULL,
        ],
        'session_type_id' => [
          'name' => 'type_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Session Type'),
          'where' => 'civicrm_session.type_id',
          'default' => '0',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'session_type',
            'optionEditPath' => 'civicrm/admin/options/session_type',
          ],
          'add' => NULL,
        ],
        'session_title' => [
          'name' => 'title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Session Title'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Session Title'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => TRUE,
          'where' => 'civicrm_session.title',
          'export' => TRUE,
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 1,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'session_description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('session Description'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Full description of the session. Text and html allowed. Displayed on built-in Event Information screens.'),
          'rows' => 8,
          'cols' => 60,
          'where' => 'civicrm_session.description',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 1,
          'html' => [
            'type' => 'RichTextEditor',
          ],
          'add' => NULL,
        ],
        'max_participants' => [
          'name' => 'max_participants',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Max Participants'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Maximum number of registered participants to allow.'),
          'where' => 'civicrm_session.max_participants',
          'default' => 'NULL',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'session_location' => [
          'name' => 'location',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('session Description'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Location information for this session'),
          'rows' => 8,
          'cols' => 60,
          'where' => 'civicrm_session.location',
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 1,
          'html' => [
            'type' => 'RichTextEditor',
          ],
          'add' => NULL,
        ],
        'session_presenter_id' => [
          'name' => 'presenter_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Presenter (Contact)'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('FK to Contact ID'),
          'required' => TRUE,
          'import' => TRUE,
          'where' => 'civicrm_session.presenter_id',
          'export' => TRUE,
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 0,
          'add' => '1.7',
        ],
        'session_presenter_title' => [
          'name' => 'presenter_title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Remoteevent_ExtensionUtil::ts('Presenter Title'),
          'description' => CRM_Remoteevent_ExtensionUtil::ts('Presenter Title'),
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => TRUE,
          'where' => 'civicrm_session.presenter_title',
          'export' => TRUE,
          'table_name' => 'civicrm_session',
          'entity' => 'Session',
          'bao' => 'CRM_Remoteevent_DAO_Session',
          'localizable' => 1,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return CRM_Core_DAO::getLocaleTableName(self::$_tableName);
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'session', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'session', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
